#!/bin/bash
source $(dirname $0)/xcp-begin
plist=$(get_plist_path "$1") || exit 1;
BUILD_NUM=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "$plist" | /usr/bin/perl -pe 's/(\d+\.\d+\.)(\d+)/$1.($2+1)/eg')
NEXT_BUILD_NUM=$((BUILD_NUM + 1))
read  -rd '' BUILD_NUM <<< "$BUILD_NUM"

re='^[0-9]+$'
if ! [[ $BUILD_NUM =~ $re ]] ; then
   echo "error: Can't Extract build number. Maybe your project has not 'CURRENT_PROJECT_VERSION' key in plist." >&2; exit 1
fi

if [ "$2" == "--revert" ]; then
    echo "# Now revert : Build $BUILD_NUM ..."
    TAG="$1/beta/b$BUILD_NUM"
    
    last_commit_sha=$(git show-ref --heads --hash --tags "$TAG")
    if [ -z "$last_commit_sha" ]; then
    	echo "[!] Not found matched SHA via current build number"; exit 1
    fi
    git revert $last_commit_sha --no-edit
    git push origin $current_branch
    git fetch --tags
    git tag -d $TAG
    git push origin :refs/tags/$TAG

else
    if ! [ "$2" == "--same-build" ]; then
        /usr/libexec/PListBuddy -c "Set :CFBundleVersion $NEXT_BUILD_NUM" $plist
        BUILD_NUM=$NEXT_BUILD_NUM
    fi
    TAG="$1/beta/b$BUILD_NUM"
    beta_build_name="$1/$BUILD_NUM"
    echo "# Now deploy to origin : Build $beta_build_name"
    # push to origin
    git add -u
    git commit -m "[Build $beta_build_name - Beta]"
    git push -f origin "$current_branch":release-beta
    git push origin $current_branch
    git tag "$TAG" -f && git push origin "$TAG" -f
fi

source $(dirname $0)/xcp-end
